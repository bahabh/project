before_script:
# log into GitLab Container registry
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  
cache:
  paths:
  - node_modules/

stages:
  - ðŸ“¦ build
  - âœ… review
  - ðŸš€ production
  - ðŸ“„ cleanup

build:
  stage: ðŸ“¦ build
  script:
    - echo "CI_COMMIT_BRANCH = ${CI_COMMIT_BRANCH}"
    - echo "CI_COMMIT_TAG = ${CI_COMMIT_TAG}"
    - echo "Building the app"
    - docker build -t tanuki.app .
    - docker tag tanuki.app:latest $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master" || $CI_COMMIT_REF_NAME == "master"'

  tags:
    - shell

deploy_review:
  stage: âœ… review
  variables:
    GIT_STRATEGY: none
    PORT: 90
  script:
    - echo "Deploy to localhost:${PORT}"
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
    - docker stop reviewapp-demo-$CI_COMMIT_REF_NAME || true
    - docker rm reviewapp-demo-$CI_COMMIT_REF_NAME || true
    - docker run -p 127.0.0.1:$PORT:8080/tcp -d --name reviewapp-demo-$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://127.0.0.1:$PORT
    on_stop: stop_review
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master"'
  tags:
    - shell


deploy_prod:
  stage: ðŸš€ production
  variables:
    GIT_STRATEGY: none
    PORT: 91
  script:
    - echo "Deploy to localhost:${PORT}"
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
    - docker stop prod-demo-$CI_COMMIT_REF_NAME || true
    - docker rm prod-demo-$CI_COMMIT_REF_NAME || true
    - docker run -p 127.0.0.1:$PORT:8080/tcp -d --name prod-demo-$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF
  environment:
    name: production
    url: http://127.0.0.1:$PORT
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
  tags:
    - shell

undeploy_prod:
  stage: ðŸ“„ cleanup
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Remove prod app from production"
    - docker rmi tanuki.app:latest || true
    - docker stop prod-demo-$CI_COMMIT_REF_NAME || true
    - docker rm prod-demo-$CI_COMMIT_REF_NAME || true
    - docker rmi -f $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_BUILD_REF  || true
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
  environment:
    name: production
    action: stop
  tags:
    - shell

stop_review:
  stage: ðŸ“„ cleanup
  variables:
    GIT_STRATEGY: none
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master"'
      when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  tags:
    - shell
  script:
    - echo "Remove images from runner"
    - docker rmi tanuki.app:latest || true
    - docker stop reviewapp-demo-$CI_COMMIT_REF_NAME  || true
    - docker rm reviewapp-demo-$CI_COMMIT_REF_NAME  || true
